// <auto-generated />
using System;
using JsonStreamingServer.Suppliers.Database.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JsonStreamingServer.Suppliers.Database.Migrations
{
    [DbContext(typeof(HotelOffersDbContext))]
    [Migration("20230305152620_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("JsonStreamingServer.Suppliers.Database.Entities.HotelOfferEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("TEXT")
                        .HasColumnName("short_description");

                    b.HasKey("Id");

                    b.ToTable("hotel_offer", (string)null);
                });

            modelBuilder.Entity("JsonStreamingServer.Suppliers.Database.Entities.ImageEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Caption")
                        .HasColumnType("TEXT")
                        .HasColumnName("caption");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("url");

                    b.Property<int>("offer_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("offer_id");

                    b.ToTable("image", (string)null);
                });

            modelBuilder.Entity("JsonStreamingServer.Suppliers.Database.Entities.PricingEntity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AgeFrom")
                        .HasColumnType("INTEGER")
                        .HasColumnName("age_from");

                    b.Property<uint>("AgeTo")
                        .HasColumnType("INTEGER")
                        .HasColumnName("age_to");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("currency");

                    b.Property<DateOnly>("DayFrom")
                        .HasColumnType("TEXT")
                        .HasColumnName("day_from");

                    b.Property<DateOnly>("DayTo")
                        .HasColumnType("TEXT")
                        .HasColumnName("day_to");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT")
                        .HasColumnName("value");

                    b.Property<int>("offer_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("offer_id");

                    b.ToTable("pricing", (string)null);
                });

            modelBuilder.Entity("JsonStreamingServer.Suppliers.Database.Entities.ImageEntity", b =>
                {
                    b.HasOne("JsonStreamingServer.Suppliers.Database.Entities.HotelOfferEntity", "OfferEntity")
                        .WithMany("Images")
                        .HasForeignKey("offer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferEntity");
                });

            modelBuilder.Entity("JsonStreamingServer.Suppliers.Database.Entities.PricingEntity", b =>
                {
                    b.HasOne("JsonStreamingServer.Suppliers.Database.Entities.HotelOfferEntity", "OfferEntity")
                        .WithMany("Pricings")
                        .HasForeignKey("offer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferEntity");
                });

            modelBuilder.Entity("JsonStreamingServer.Suppliers.Database.Entities.HotelOfferEntity", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Pricings");
                });
#pragma warning restore 612, 618
        }
    }
}
